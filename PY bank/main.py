{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define a function that analyzes financial record\n",
    "def main(directory, file_name):\n",
    "\n",
    "    \"\"\"\n",
    "    input: \n",
    "        directory - str, folder of the csv file\n",
    "        file_name - str, name of the csv file including extension\n",
    "    output:\n",
    "        tot_month - int, total number of months included in the dataset\n",
    "        tot_revenue - float, total amount of revenue gained over the entire period\n",
    "        change_average - float, average change in revenue between months over the entire period\n",
    "        change_max - list, greatest increase in revenue (date and amount) over the entire period\n",
    "        change_min - list, greatest decrease in revenue (date and amount) over the entire period\n",
    "    \"\"\"\n",
    "\n",
    "    # Import modules\n",
    "    import os\n",
    "    import csv\n",
    "\n",
    "    # Specify file path\n",
    "    file_path = os.path.join(directory, file_name)\n",
    "\n",
    "    # Initialize variables\n",
    "    month_year_list = []\n",
    "    Profit/losses = []\n",
    "    tot_revenue = 0\n",
    "    tot_change = 0\n",
    "    change_max = ['', 0]\n",
    "    change_min = ['', 0]\n",
    "\n",
    "    # Read csv data to gather date and profit/losses data\n",
    "    with open(file_path, newline = '') as file_in:\n",
    "        csvreader = csv.reader(file_in, delimiter = ',')\n",
    "        next(csvreader, None)\n",
    "        for row in csvreader:\n",
    "            month_year = row[0]\n",
    "            profit/losses = float(row[1])\n",
    "            month_year_list.append(month_year)\n",
    "            profit/losses_list.append(revenue)\n",
    "            tot_profit/losses += profit/losses\n",
    "\n",
    "    # Loop through the list to calculate summary data\n",
    "    tot_month = len(month_year_list)\n",
    "    for i in range(1, len(month_year_list)):\n",
    "        change = profit/losses_list[i] - profit/losses_list[i-1]\n",
    "        tot_change += change\n",
    "        if change > change_max[1]:\n",
    "            change_max = [month_year_list[i], change]\n",
    "        if change < change_min[1]:\n",
    "            change_min = [month_year_list[i], change]\n",
    "    change_average = tot_change / tot_month\n",
    "\n",
    "    # Store summary data in list\n",
    "    line1 = 'Financial Analysis'\n",
    "    line2 = '-' * 30\n",
    "    line3 = 'Total Months: ' + str(tot_month)\n",
    "    line4 = 'Total profit/losses: $' + str(round(tot_profit/losses\n",
    "    line5 = 'Average profit/lossesstr(round(change_average))\n",
    "    line6 = 'Greatest Increase'+ change_max[0] + ' ($' + str(round(change_max[1])) + ')'\n",
    "    line7 = 'Greatest Decrease' + change_min[0] + ' ($' + str(round(change_min[1])) + ')'\n",
    "    summary = []\n",
    "    summary.extend([line1, line2, line3, line4, line5, line6, line7])\n",
    "\n",
    "    # Report summary data in terminal\n",
    "    print('')\n",
    "    print(file_name)\n",
    "    for line in summary:\n",
    "        print(line)\n",
    "    print('')\n",
    "\n",
    "    # Write summary data into a text file\n",
    "    output_file_path = file_name.split('.')[0] + '_output.txt'\n",
    "    with open(output_file_path, 'w') as file_out:\n",
    "        for line in summary:\n",
    "            file_out.write(line + '\\n')\n",
    "\n",
    "# Analyze test record using the defined function\n",
    "file_name = 'budget_data.csv'\n",
    "main(directory, file_name)\n",
    "\n",
    "# Analyze test record using the defined function\n",
    "file_name = 'budget_data_2.csv'\n",
    "main(directory, file_name)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
